FUNKCJE:
- iOS Safari -> layout select2 multiple rozwalony
- reservation_add: wyszukiwanie sal bez konfliktów
- zapis last_date w cookie po stronie clienta i servera
- Pokaż sale posiadające [Wszystkie/Dowolne] etykiety

a)
- obsługa cyklicznej rezerwacji (np. co tydzień) w podanym przedziale czasu (RecurringReservation)

b) Ewidencja obecności pracowników oraz pobrań i zwrotów kluczy
- stworzenie tabel user_presnce i key_events oraz przyporządkowania RFID users i rooms
- wyświetlenie pobrań i zwrotów kluczy w aplikacji internetowej w formie półprzeźroczystych warstw 
  zachodzących na rezerwacje (we wszystkich widokach)
- zdalne uwierzytelnienie wejścia, wyjścia lub poboru klucza
- sprawdzenie czasu pracy Pracownika w określonym przedziale

----------------------------------------------------------------------------------------------------
http://pc.piechnat.pl/login/check?state=f35b5b20b2564370d05e7a1c60643b43&code=4%2F0AY0e-g6u93qmc5Nh6hvZDOHWk4imGmMuSNjbdL6rn-L1rXEWLwFh1wqwRz3PBskbBtnQ3g&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=3&hd=amuz.lodz.pl&prompt=none#

Invalid state parameter passed in callback URL.
----------------------------------------------------------------------------------------------------

user_presence
- user_id - foreign key
- begin_time
- end_time (NULL)

key_event
- user_presence_id - foreign key
- room_id - foreign key
- begin_time
- end_time (NULL)

IN_MODE(USER, KEY = null):
    - znajdź najmłodszy rekord user_presence z user_id = USER z ostatnich 24 godzin !!!
    - jeśli end_time != NULL & begin_time > now - 1minute to zapisz NULL do end_time
    - jeśli nie istnieje to utwórz nowy user_presence(USER)
    - jeżeli podano KEY:
        - znajdź najmłodszy rekord key_event z room_id = KEY & end_time = NULL z ostatnich 24 godzin !!!
        - jeśli istnieje to 
            - jeśli user_presence_id != user_presence to zaktualizuj end_time
        - utwórz key_event(user_presence, KEY)
        

OUT_MODE(KEY):
    - znajdź najmłodszy rekord key_event z room_id = KEY z ostatnich 24 godzin !!!
    - jeśli end_time == NULL to
        - jeśli begin_time > now - 1minute to usuń key_event i ZWRÓĆ komunikat anulowania
        - zaktualizuj end_time
        - znajdź rezerwację która pokrywaja się czasowo 
          a jej room_id = KEY & requester = user_presence_id.user_id
        - zapisz do niej key_event ID
    - ZWRÓĆ end_time
    
OUT_MODE(USER):
    - znajdź najmłodszy rekord user_presence z user_id == USER z ostatnich 24 godzin !!!
    - jeśli end_time == NULL to 
        - jeśli istnieje rekord key_event z user_presence_id = user_presence & end_time == NULL 
          to ZWRÓĆ BŁĄD key_event.room_id.title
        - zaktualizuj end_time
    - ZWRÓĆ end_time




